"use strict";(self.webpackChunkmodlib_docs=self.webpackChunkmodlib_docs||[]).push([[5306],{5480:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"apps/object_counter","title":"Object Counter","description":"ObjectCounter","source":"@site/_api_versioned_docs/version-1.0.0/apps/object_counter.md","sourceDirName":"apps","slug":"/apps/object_counter","permalink":"/en/application-module-library/docs/api-reference/1.0.0/apps/object_counter","draft":false,"unlisted":false,"tags":[],"version":"1.0.0","lastUpdatedAt":1742829948000,"sidebarPosition":4,"frontMatter":{"title":"Object Counter","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Matcher","permalink":"/en/application-module-library/docs/api-reference/1.0.0/apps/matcher"},"next":{"title":"Tracker","permalink":"/en/application-module-library/docs/api-reference/1.0.0/apps/tracker"}}');var i=t(4848),r=t(8453);const a={title:"Object Counter",sidebar_position:4},l=void 0,c={},o=[{value:"ObjectCounter",id:"objectcounter",level:2},{value:"Methods",id:"methods",level:3},{value:'<span class="signature-title">__init__</span>',id:"__init__",level:4},{value:'<span class="signature-title">update</span>',id:"update",level:4},{value:'<span class="signature-title">update_pose</span>',id:"update_pose",level:4},{value:'<span class="signature-title">get</span>',id:"get",level:4}];function d(e){const s={a:"a",br:"br",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("div",{className:"module-separator","data-content":"Class"}),"\n",(0,i.jsx)(s.h2,{id:"objectcounter",children:"ObjectCounter"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"ObjectCounter("}),(0,i.jsx)("b",{children:")"})]}),"\nA class responsible for keeping track of all classes detected and the amount of them over time. Can be used with or\nwithout a tracker_id and can be send subsets of Detections and Poses to count certain conditions."]}),"\n",(0,i.jsx)(s.h3,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h4,{id:"__init__",children:(0,i.jsx)("span",{className:"signature-title",children:"__init__"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"__init__("}),"self",(0,i.jsx)("b",{children:")"})]}),"\n",(0,i.jsx)(s.p,{children:"Initialize self.  See help(type(self)) for accurate signature."}),"\n",(0,i.jsx)(s.h4,{id:"update",children:(0,i.jsx)("span",{className:"signature-title",children:"update"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"update("}),"self, detections:\xa0",(0,i.jsx)(s.a,{href:"../models/results#detections",children:"Detections"}),(0,i.jsx)("b",{children:")"})," \u2011> None"]}),"\n",(0,i.jsx)(s.p,{children:"Updates counters for all classes that are detected in Detections Class, increaments already detected classes."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"detections"})," (",(0,i.jsx)(s.a,{href:"../models/results#detections",children:"Detections"}),"): The Detections to check if the are in area."]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"update_pose",children:(0,i.jsx)("span",{className:"signature-title",children:"update_pose"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"update_pose("}),"self, poses:\xa0",(0,i.jsx)(s.a,{href:"../models/results#poses",children:"Poses"}),(0,i.jsx)("b",{children:")"})," \u2011> None"]}),"\n",(0,i.jsx)(s.p,{children:"Updates counters for Pose detections, Poses doesn't have class_id so every detection type is '1'."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"poses"})," (",(0,i.jsx)(s.a,{href:"../models/results#poses",children:"Poses"}),"): The Pose detections to check if the are in area."]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"get",children:(0,i.jsx)("span",{className:"signature-title",children:"get"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"get("}),"self, class_id:\xa0int",(0,i.jsx)("b",{children:")"})," \u2011> int"]}),"\n",(0,i.jsx)(s.p,{children:"Gets the value of the counter by it's ID"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"class_id"})," (int): The ID of the class user wants value of"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Returns:"})," (int)",(0,i.jsx)(s.br,{}),"\n","self.counters[str(class_id)]: Value of the class_id"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>l});var n=t(6540);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);