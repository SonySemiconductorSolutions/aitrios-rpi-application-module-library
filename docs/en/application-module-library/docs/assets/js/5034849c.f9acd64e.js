"use strict";(self.webpackChunkmodlib_docs=self.webpackChunkmodlib_docs||[]).push([[2189],{5180:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"apps/tracker","title":"Tracker","description":"This page combines the API reference for:","source":"@site/_api_versioned_docs/version-1.1.0/apps/tracker.md","sourceDirName":"apps","slug":"/apps/tracker","permalink":"/en/application-module-library/docs/api-reference/apps/tracker","draft":false,"unlisted":false,"tags":[],"version":"1.1.0","lastUpdatedAt":1750065085000,"sidebarPosition":8,"frontMatter":{"title":"Tracker","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Object Counter","permalink":"/en/application-module-library/docs/api-reference/apps/object_counter"},"next":{"title":"Devices","permalink":"/en/application-module-library/docs/api-reference/category/devices"}}');var i=s(4848),a=s(8453);const t={title:"Tracker",sidebar_position:8},c=void 0,l={},d=[{value:"BYTETracker",id:"bytetracker",level:2},{value:"Methods",id:"methods",level:3},{value:'<span class="signature-title">__init__</span>',id:"__init__",level:4},{value:'<span class="signature-title">update</span>',id:"update",level:4},{value:'<span class="signature-title">get_stracks_boxes</span>',id:"get_stracks_boxes",level:4},{value:"KalmanFilter",id:"kalmanfilter",level:2},{value:"Methods",id:"methods-1",level:3},{value:'<span class="signature-title">__init__</span>',id:"__init__-1",level:4},{value:'<span class="signature-title">initiate</span>',id:"initiate",level:4},{value:'<span class="signature-title">predict</span>',id:"predict",level:4},{value:'<span class="signature-title">project</span>',id:"project",level:4},{value:'<span class="signature-title">multi_predict</span>',id:"multi_predict",level:4},{value:'<span class="signature-title">update</span>',id:"update-1",level:4},{value:'<span class="signature-title">gating_distance</span>',id:"gating_distance",level:4}];function o(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This page combines the API reference for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"modlib.apps.tracker.byte_tracker"}),"\n",(0,i.jsx)(n.li,{children:"modlib.apps.tracker.kalman_filter"}),"\n"]}),"\n",(0,i.jsx)("div",{className:"module-separator","data-content":"Class"}),"\n",(0,i.jsx)(n.h2,{id:"bytetracker",children:"BYTETracker"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"BYTETracker("}),"args:\xa0object, frame_rate:\xa0int\xa0=\xa030",(0,i.jsx)("b",{children:")"})]}),"\nProvides tracking ids to detections by looking at the movement of bboxes over time"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"from modlib.apps import BYTETracker\n\nclass BYTETrackerArgs:\n    track_thresh: float = 0.25\n    track_buffer: int = 30\n    match_thresh: float = 0.8\n    aspect_ratio_thresh: float = 3.0\n    min_box_area: float = 1.0\n    mot20: bool = False\n\ntracker = BYTETracker(BYTETrackerArgs())\n...\ndetections = tracker.update(frame, detections)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h4,{id:"__init__",children:(0,i.jsx)("span",{className:"signature-title",children:"__init__"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"__init__("}),"self, args:\xa0object, frame_rate:\xa0int\xa0=\xa030",(0,i.jsx)("b",{children:")"})]}),"\n",(0,i.jsx)(n.p,{children:"Initialise the tracker providing the BYTETrackerArgs."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"args"})," (object): Arguments for the BYTETracker"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"frame_rate"})," (int\xa0=\xa030): Exected frame rate of the camera feed."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"update",children:(0,i.jsx)("span",{className:"signature-title",children:"update"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"update("}),"self, frame:\xa0",(0,i.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"}),", detections:\xa0",(0,i.jsx)(n.a,{href:"../models/results#detections",children:"Detections"}),(0,i.jsx)("b",{children:")"})," \u2011> ",(0,i.jsx)(n.a,{href:"../models/results#detections",children:"Detections"})]}),"\n",(0,i.jsxs)(n.p,{children:["BYTETracker update functionality reponsible for tracking of objects across frames.",(0,i.jsx)(n.br,{}),"\n","It updates the given detection with a unique tracker ID."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"frame"})," (",(0,i.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"}),"): The frame corresponding to the given detections."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"detections"})," (",(0,i.jsx)(n.a,{href:"../models/results#detections",children:"Detections"}),"): The detections for which to add the ",(0,i.jsx)(n.code,{children:"tracker_id"}),"'s."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (",(0,i.jsx)(n.a,{href:"../models/results#detections",children:"Detections"}),")",(0,i.jsx)(n.br,{}),"\n","The updated detections including tracklets."]}),"\n",(0,i.jsx)(n.h4,{id:"get_stracks_boxes",children:(0,i.jsx)("span",{className:"signature-title",children:"get_stracks_boxes"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"get_stracks_boxes("}),"self",(0,i.jsx)("b",{children:")"})]}),"\n",(0,i.jsx)("div",{className:"module-separator","data-content":"Class"}),"\n",(0,i.jsx)(n.h2,{id:"kalmanfilter",children:"KalmanFilter"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"KalmanFilter("}),(0,i.jsx)("b",{children:")"})]}),"\nA simple Kalman filter for tracking bounding boxes in image space."]}),"\n",(0,i.jsx)(n.p,{children:"The 8-dimensional state space"}),"\n",(0,i.jsx)(n.p,{children:"x, y, a, h, vx, vy, va, vh"}),"\n",(0,i.jsx)(n.p,{children:"contains the bounding box center position (x, y), aspect ratio a, height h,\nand their respective velocities."}),"\n",(0,i.jsx)(n.p,{children:"Object motion follows a constant velocity model. The bounding box location\n(x, y, a, h) is taken as direct observation of the state space (linear\nobservation model)."}),"\n",(0,i.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,i.jsx)(n.h4,{id:"__init__-1",children:(0,i.jsx)("span",{className:"signature-title",children:"__init__"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"__init__("}),"self",(0,i.jsx)("b",{children:")"})]}),"\n",(0,i.jsx)(n.p,{children:"Initialize self.  See help(type(self)) for accurate signature."}),"\n",(0,i.jsx)(n.h4,{id:"initiate",children:(0,i.jsx)("span",{className:"signature-title",children:"initiate"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"initiate("}),"self, measurement:\xa0numpy.ndarray",(0,i.jsx)("b",{children:")"})," \u2011> Tuple[numpy.ndarray,\xa0numpy.ndarray]"]}),"\n",(0,i.jsx)(n.p,{children:"Create track from unassociated measurement."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measurement"})," (numpy.ndarray): Bounding box coordinates (x, y, a, h) with center position (x, y), aspect ratio a, and height h."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (Tuple[numpy.ndarray,\xa0numpy.ndarray])",(0,i.jsx)(n.br,{}),"\n","The mean vector (8 dimensional) and covariance matrix (8x8 dimensional)",(0,i.jsx)(n.br,{}),"\n","of the new track. Unobserved velocities are initialized to 0 mean."]}),"\n",(0,i.jsx)(n.h4,{id:"predict",children:(0,i.jsx)("span",{className:"signature-title",children:"predict"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"predict("}),"self, mean:\xa0numpy.ndarray, covariance:\xa0numpy.ndarray",(0,i.jsx)("b",{children:")"})," \u2011> Tuple[numpy.ndarray,\xa0numpy.ndarray]"]}),"\n",(0,i.jsx)(n.p,{children:"Run Kalman filter prediction step."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mean"})," (numpy.ndarray): The 8 dimensional mean vector of the object state at the previous time step."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"covariance"})," (numpy.ndarray): The 8x8 dimensional covariance matrix of the object state at the previous time step."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (Tuple[numpy.ndarray,\xa0numpy.ndarray])",(0,i.jsx)(n.br,{}),"\n","The mean vector and covariance matrix of the predicted",(0,i.jsx)(n.br,{}),"\n","state. Unobserved velocities are initialized to 0 mean."]}),"\n",(0,i.jsx)(n.h4,{id:"project",children:(0,i.jsx)("span",{className:"signature-title",children:"project"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"project("}),"self, mean:\xa0numpy.ndarray, covariance:\xa0numpy.ndarray",(0,i.jsx)("b",{children:")"})," \u2011> Tuple[numpy.ndarray,\xa0numpy.ndarray]"]}),"\n",(0,i.jsx)(n.p,{children:"Project state distribution to measurement space."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mean"})," (numpy.ndarray): The state's mean vector (8 dimensional array)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"covariance"})," (numpy.ndarray): The state's covariance matrix (8x8 dimensional)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (Tuple[numpy.ndarray,\xa0numpy.ndarray])",(0,i.jsx)(n.br,{}),"\n","The projected mean and covariance matrix of the given state estimate."]}),"\n",(0,i.jsx)(n.h4,{id:"multi_predict",children:(0,i.jsx)("span",{className:"signature-title",children:"multi_predict"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"multi_predict("}),"self, mean:\xa0numpy.ndarray, covariance:\xa0numpy.ndarray",(0,i.jsx)("b",{children:")"})," \u2011> Tuple[numpy.ndarray,\xa0numpy.ndarray]"]}),"\n",(0,i.jsx)(n.p,{children:"Run Kalman filter prediction step (Vectorized version)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mean"})," (numpy.ndarray): The Nx8 dimensional mean matrix of the object states at the previous time step."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"covariance"})," (numpy.ndarray): The Nx8x8 dimensional covariance matrics of the object states at the previous time step."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (Tuple[numpy.ndarray,\xa0numpy.ndarray])",(0,i.jsx)(n.br,{}),"\n","The mean vector and covariance matrix of the predicted state.",(0,i.jsx)(n.br,{}),"\n","Unobserved velocities are initialized to 0 mean."]}),"\n",(0,i.jsx)(n.h4,{id:"update-1",children:(0,i.jsx)("span",{className:"signature-title",children:"update"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"update("}),"self, mean:\xa0numpy.ndarray, covariance:\xa0numpy.ndarray, measurement:\xa0numpy.ndarray",(0,i.jsx)("b",{children:")"})," \u2011> Tuple[numpy.ndarray,\xa0numpy.ndarray]"]}),"\n",(0,i.jsx)(n.p,{children:"Run Kalman filter correction step."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mean"})," (numpy.ndarray): The predicted state's mean vector (8 dimensional)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"covariance"})," (numpy.ndarray): The state's covariance matrix (8x8 dimensional)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measurement"})," (numpy.ndarray): The 4 dimensional measurement vector (x, y, a, h), where (x, y)\nis the center position, a the aspect ratio, and h the height of the bounding box."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (Tuple[numpy.ndarray,\xa0numpy.ndarray])",(0,i.jsx)(n.br,{}),"\n","The measurement-corrected state distribution."]}),"\n",(0,i.jsx)(n.h4,{id:"gating_distance",children:(0,i.jsx)("span",{className:"signature-title",children:"gating_distance"})}),"\n",(0,i.jsxs)("div",{className:"signature",children:[(0,i.jsx)("b",{children:"gating_distance("}),"self, mean:\xa0numpy.ndarray, covariance:\xa0numpy.ndarray, measurements:\xa0numpy.ndarray, only_position:\xa0Optional[bool]\xa0=\xa0False, metric:\xa0str\xa0=\xa0'maha'",(0,i.jsx)("b",{children:")"})," \u2011> numpy.ndarray"]}),"\n",(0,i.jsxs)(n.p,{children:["Compute gating distance between state distribution and measurements.",(0,i.jsx)(n.br,{}),"\n","A suitable distance threshold can be obtained from ",(0,i.jsx)(n.code,{children:"chi2inv95"}),". If",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"only_position"})," is False, the chi-square distribution has 4 degrees of",(0,i.jsx)(n.br,{}),"\n","freedom, otherwise 2."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mean"})," (numpy.ndarray): Mean vector over the state distribution (8 dimensional)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"covariance"})," (numpy.ndarray): Covariance of the state distribution (8x8 dimensional)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measurements"})," (numpy.ndarray): An Nx4 dimensional matrix of N measurements, each in\nformat (x, y, a, h) where (x, y) is the bounding box center",(0,i.jsx)(n.br,{}),"\n","position, a the aspect ratio, and h the height."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"only_position"})," (Optional[bool]\xa0=\xa0False): If True, distance computation is done with respect to the bounding box center position only."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"metric"})," (str\xa0=\xa0'maha'): Distance metric to be used, should be one of ['gaussian', 'maha']. Defaults to ",(0,i.jsx)(n.code,{children:"maha"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," (numpy.ndarray)",(0,i.jsx)(n.br,{}),"\n","An array of length N, where the i-th element contains the squared Mahalanobis distance",(0,i.jsx)(n.br,{}),"\n","between (mean, covariance) and ",(0,i.jsx)(n.code,{children:"measurements[i]"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(6540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);