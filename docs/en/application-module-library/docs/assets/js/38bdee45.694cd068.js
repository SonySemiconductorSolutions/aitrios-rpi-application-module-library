"use strict";(self.webpackChunkmodlib_docs=self.webpackChunkmodlib_docs||[]).push([[6691],{1021:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"devices/ai_camera","title":"Ai Camera","description":"This page combines the API reference for:","source":"@site/_api_versioned_docs/version-1.1.0/devices/ai_camera.md","sourceDirName":"devices","slug":"/devices/ai_camera","permalink":"/en/application-module-library/docs/api-reference/devices/ai_camera","draft":false,"unlisted":false,"tags":[],"version":"1.1.0","lastUpdatedAt":1749815802000,"sidebarPosition":0,"frontMatter":{"title":"Ai Camera","sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Devices","permalink":"/en/application-module-library/docs/api-reference/category/devices"},"next":{"title":"Device","permalink":"/en/application-module-library/docs/api-reference/devices/device"}}');var r=s(4848),t=s(8453);const l={title:"Ai Camera",sidebar_position:0},a=void 0,o={},d=[{value:"AiCamera",id:"aicamera",level:2},{value:"Methods",id:"methods",level:3},{value:'<span class="signature-title">__init__</span>',id:"__init__",level:4},{value:'<span class="signature-title">start</span>',id:"start",level:4},{value:'<span class="signature-title">stop</span>',id:"stop",level:4},{value:'<span class="signature-title">set_input_tensor_cropping</span>',id:"set_input_tensor_cropping",level:4},{value:'<span class="signature-title">set_image_cropping</span>',id:"set_image_cropping",level:4},{value:'<span class="signature-title">prepare_model_for_deployment</span>',id:"prepare_model_for_deployment",level:4},{value:'<span class="signature-title">deploy</span>',id:"deploy",level:4},{value:'<span class="signature-title">__enter__</span>',id:"__enter__",level:4},{value:'<span class="signature-title">__exit__</span>',id:"__exit__",level:4},{value:'<span class="signature-title">__iter__</span>',id:"__iter__",level:4},{value:'<span class="signature-title">get_frame</span>',id:"get_frame",level:4},{value:'<span class="signature-title">__next__</span>',id:"__next__",level:4},{value:"RPKPackager",id:"rpkpackager",level:2},{value:"Methods",id:"methods-1",level:3},{value:'<span class="signature-title">__init__</span>',id:"__init__-1",level:4},{value:'<span class="signature-title">run</span>',id:"run",level:4},{value:'<span class="signature-title">set_post_converter_config</span>',id:"set_post_converter_config",level:4}];function c(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This page combines the API reference for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"modlib.devices.ai_camera.ai_camera"}),"\n",(0,r.jsx)(n.li,{children:"modlib.devices.ai_camera.rpk_packager"}),"\n"]}),"\n",(0,r.jsx)("div",{className:"module-separator","data-content":"Class"}),"\n",(0,r.jsx)(n.h2,{id:"aicamera",children:"AiCamera"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"AiCamera("}),"headless:\xa0Optional[bool]\xa0=\xa0False, enable_input_tensor:\xa0Optional[bool]\xa0=\xa0False, timeout:\xa0Optional[int]\xa0=\xa0None, frame_rate:\xa0Optional[int]\xa0=\xa030, image_size:\xa0Tuple[int,\xa0int]\xa0=\xa0(640, 480), num:\xa0Optional[int]\xa0=\xa00",(0,r.jsx)("b",{children:")"})]}),"\nThe Raspberry Pi AI Camera."]}),"\n",(0,r.jsx)(n.p,{children:"This camera device module allows to run model inference on the IMX500 vision sensor.\nOutput tensors are post-processed by the model post-processor function and attached to the frame."}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"from modlib.devices import AiCamera\nfrom modlib.models.zoo import SSDMobileNetV2FPNLite320x320\n\ndevice = AiCamera()\nmodel = SSDMobileNetV2FPNLite320x320()\ndevice.deploy(model)\n\nwith device as stream:\n    for frame in stream:\n        print(frame.detections)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inherites"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../devices/device#device",children:"Device"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h4,{id:"__init__",children:(0,r.jsx)("span",{className:"signature-title",children:"__init__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__init__("}),"self, headless:\xa0Optional[bool]\xa0=\xa0False, enable_input_tensor:\xa0Optional[bool]\xa0=\xa0False, timeout:\xa0Optional[int]\xa0=\xa0None, frame_rate:\xa0Optional[int]\xa0=\xa030, image_size:\xa0Tuple[int,\xa0int]\xa0=\xa0(640, 480), num:\xa0Optional[int]\xa0=\xa00",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Initialize the AiCamera device."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"headless"})," (Optional[bool]\xa0=\xa0False): Initialising the AiCamera in headless mode means ",(0,r.jsx)(n.code,{children:"frame.image"})," is never processed and unavailable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"enable_input_tensor"})," (Optional[bool]\xa0=\xa0False): When enabling input tensor, ",(0,r.jsx)(n.code,{children:"frame.image"})," will be replaced by the input tensor image."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"timeout"})," (Optional[int]\xa0=\xa0None): If set, automatically stop the device loop after the specified seconds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"frame_rate"})," (Optional[int]\xa0=\xa030): The frames per second applied to the libcamera configuration."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"image_size"})," (Tuple[int,\xa0int]\xa0=\xa0(640, 480)): Resolution of the frame.image. Defaults to (640, 480) which has the original aspect ratio."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"num"})," (Optional[int]\xa0=\xa00): The camera number to select which camera to use, when more then one AiCamera connected to libcamera."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"start",children:(0,r.jsx)("span",{className:"signature-title",children:"start"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"start("}),"self",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.h4,{id:"stop",children:(0,r.jsx)("span",{className:"signature-title",children:"stop"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"stop("}),"self",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.h4,{id:"set_input_tensor_cropping",children:(0,r.jsx)("span",{className:"signature-title",children:"set_input_tensor_cropping"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"set_input_tensor_cropping("}),"self, roi:\xa0Union[",(0,r.jsx)(n.a,{href:"../devices/frame#roi",children:"ROI"}),",\xa0Tuple[float,\xa0float,\xa0float,\xa0float]]",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Set the input tensor cropping."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"roi"})," (Union[",(0,r.jsx)(n.a,{href:"../devices/frame#roi",children:"ROI"}),",\xa0Tuple[float,\xa0float,\xa0float,\xa0float]]): The relative ROI (region of interest) in the form a (left, top, width, height) [%] crop for\nthe input inference."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_image_cropping",children:(0,r.jsx)("span",{className:"signature-title",children:"set_image_cropping"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"set_image_cropping("}),"self, roi:\xa0Union[",(0,r.jsx)(n.a,{href:"../devices/frame#roi",children:"ROI"}),",\xa0Tuple[float,\xa0float,\xa0float,\xa0float]]",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Set the cropping of the high resolution image. Can only be adjusted during initialisation."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"roi"})," (Union[",(0,r.jsx)(n.a,{href:"../devices/frame#roi",children:"ROI"}),",\xa0Tuple[float,\xa0float,\xa0float,\xa0float]]): The relative ROI (region of interest) in the form a (left, top, width, height) [%] crop."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prepare_model_for_deployment",children:(0,r.jsx)("span",{className:"signature-title",children:"prepare_model_for_deployment"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"prepare_model_for_deployment("}),"self, model:\xa0",(0,r.jsx)(n.a,{href:"../models/model#model",children:"Model"}),", overwrite:\xa0Optional[bool]\xa0=\xa0None",(0,r.jsx)("b",{children:")"})," \u2011> str\xa0|\xa0None"]}),"\n",(0,r.jsxs)(n.p,{children:["Prepares a model for deployment by converting and/or packaging it based on the model type.",(0,r.jsx)(n.br,{}),"\n","Behaviour of the deployement depends on model type:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"RPK_PACKAGED: The model is already packaged, so the path is returned as is."}),"\n",(0,r.jsx)(n.li,{children:"CONVERTED: The model is a converted file (e.g., packerOut.zip), which must be packaged before deployment."}),"\n",(0,r.jsx)(n.li,{children:"KERAS or ONNX: Framework model files, which must be converted and then packaged."}),"\n",(0,r.jsx)(n.li,{children:"If the model type is unsupported or the file doesn't exist after processing, None is returned."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"model"})," (",(0,r.jsx)(n.a,{href:"../models/model#model",children:"Model"}),"): The model to be prepared. Can be of various types such as ONNX, KERAS, CONVERTED, or RPK_PACKAGED."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"overwrite"})," (Optional[bool]\xa0=\xa0None): If None, prompts the user for input. If True, overwrites the output directory if it exists.\nIf False, uses already converted/packaged model from the output directory."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," (str\xa0|\xa0None)",(0,r.jsx)(n.br,{}),"\n","The path to the packaged model file ready for deployment. Returns None if the process fails.",(0,r.jsx)(n.br,{}),"\n","overwrite: If None, prompts the user for input. If True, overwrites the output directory if it exists.",(0,r.jsx)(n.br,{}),"\n","If False, uses already converted/packaged model from the output directory."]}),"\n",(0,r.jsx)(n.h4,{id:"deploy",children:(0,r.jsx)("span",{className:"signature-title",children:"deploy"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"deploy("}),"self, model:\xa0",(0,r.jsx)(n.a,{href:"../models/model#model",children:"Model"}),", overwrite:\xa0Optional[bool]\xa0=\xa0None",(0,r.jsx)("b",{children:")"})," \u2011> None"]}),"\n",(0,r.jsxs)(n.p,{children:["This method manages the process to run a model on the device. This requires the",(0,r.jsx)(n.br,{}),"\n","following steps:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prepare model for deployment"}),"\n",(0,r.jsx)(n.li,{children:"Configure model deployment"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"model"})," (",(0,r.jsx)(n.a,{href:"../models/model#model",children:"Model"}),"): The model to be deployed on the device."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"overwrite"})," (Optional[bool]\xa0=\xa0None): If None, prompts the user for input. If True, overwrites the output directory if it exists.\nIf False, uses already converted/packaged model from the output directory."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),(0,r.jsx)(n.br,{}),"\n","FileNotFoundError: If the packaged network file cannot be found."]}),"\n",(0,r.jsx)(n.h4,{id:"__enter__",children:(0,r.jsx)("span",{className:"signature-title",children:"__enter__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__enter__("}),"self",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Start the AiCamera device stream."}),"\n",(0,r.jsx)(n.h4,{id:"__exit__",children:(0,r.jsx)("span",{className:"signature-title",children:"__exit__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__exit__("}),"self, exc_type, exc_val, exc_tb",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Stop the AiCamera device stream."}),"\n",(0,r.jsx)(n.h4,{id:"__iter__",children:(0,r.jsx)("span",{className:"signature-title",children:"__iter__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__iter__("}),"self",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Iterate over the frames in the device stream."}),"\n",(0,r.jsx)(n.h4,{id:"get_frame",children:(0,r.jsx)("span",{className:"signature-title",children:"get_frame"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"get_frame("}),"self",(0,r.jsx)("b",{children:")"})," \u2011> ",(0,r.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"})]}),"\n",(0,r.jsx)(n.p,{children:"Gets the next processed frame in the device stream."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," (",(0,r.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"}),")",(0,r.jsx)(n.br,{}),"\n","The next frame in the device stream."]}),"\n",(0,r.jsx)(n.h4,{id:"__next__",children:(0,r.jsx)("span",{className:"signature-title",children:"__next__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__next__("}),"self",(0,r.jsx)("b",{children:")"})," \u2011> ",(0,r.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"})]}),"\n",(0,r.jsx)(n.p,{children:"Get the next frame in the device stream."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," (",(0,r.jsx)(n.a,{href:"../devices/frame#frame",children:"Frame"}),")",(0,r.jsx)(n.br,{}),"\n","The next frame in the device stream."]}),"\n",(0,r.jsx)("div",{className:"module-separator","data-content":"Class"}),"\n",(0,r.jsx)(n.h2,{id:"rpkpackager",children:"RPKPackager"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"RPKPackager("}),(0,r.jsx)("b",{children:")"})]}),"\nHelper class for packaging converted IMX500 models\nto a network ",(0,r.jsx)(n.code,{children:".rpk"}),"-file accepted for an AiCamera deployment."]}),"\n",(0,r.jsxs)(n.p,{children:["Requires the installation of the imx500 packaging tools.\nMake sure to install them by running: ",(0,r.jsx)(n.code,{children:"sudo apt install imx500-tools"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'packager = RPKPackager()\npackager.run(\n    input_path="./path/to/packerOut.zip",\n    output_dir="./pack",\n    color_format=COLOR_FORMAT.RGB\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,r.jsx)(n.h4,{id:"__init__-1",children:(0,r.jsx)("span",{className:"signature-title",children:"__init__"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"__init__("}),"self",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Initialisation of the RPKPackager."}),"\n",(0,r.jsx)(n.h4,{id:"run",children:(0,r.jsx)("span",{className:"signature-title",children:"run"})}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"run("}),"self, input_path:\xa0pathlib.Path, output_dir:\xa0pathlib.Path, color_format:\xa0",(0,r.jsx)(n.a,{href:"../models/model#color_format",children:"COLOR_FORMAT"}),"\xa0=\xa0'RGB', overwrite:\xa0Optional[bool]\xa0=\xa0None",(0,r.jsx)("b",{children:")"})]}),"\n",(0,r.jsx)(n.p,{children:"Packaging (post-converter + packager) using the locally installed packager."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"input_path"})," (pathlib.Path): The input file (packerOut.zip) to be packaged."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"output_dir"})," (pathlib.Path): The directory where the packaged rpk file will be saved."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"color_format"})," (",(0,r.jsx)(n.a,{href:"../models/model#color_format",children:"COLOR_FORMAT"}),"\xa0=\xa0'RGB'): Color format to package for. Defaults to ",(0,r.jsx)(n.code,{children:"COLOR_FORMAT.RGB"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"overwrite"})," (Optional[bool]\xa0=\xa0None): If None, prompts the user for input. If True, overwrites the output directory if it exists.\nIf False, aborts if the directory exists."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),(0,r.jsx)(n.br,{}),"\n","EnvironmentError: When the packager is initialised on a host other then a Raspberry Pi.",(0,r.jsx)(n.br,{}),"\n","FileNotFoundError: When the imx500 packaging tools are not installed."]}),"\n",(0,r.jsx)(n.h4,{id:"set_post_converter_config",children:(0,r.jsx)("span",{className:"signature-title",children:"set_post_converter_config"})}),"\n",(0,r.jsx)("div",{className:"decorator",children:"@staticmethod"}),"\n",(0,r.jsxs)("div",{className:"signature",children:[(0,r.jsx)("b",{children:"set_post_converter_config("}),"output_dir:\xa0pathlib.Path, color_format:\xa0",(0,r.jsx)(n.a,{href:"../models/model#color_format",children:"COLOR_FORMAT"}),(0,r.jsx)("b",{children:")"})," \u2011> pathlib.Path"]}),"\n",(0,r.jsxs)(n.p,{children:["Creates a JSON file in the output directory with the input tensor format configuration.",(0,r.jsx)(n.br,{}),"\n",'Supported formats are "RGB", "BGR", "Y", or "BayerRGB".']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"output_dir"})," (pathlib.Path): The directory where the JSON file will be saved."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"color_format"})," (",(0,r.jsx)(n.a,{href:"../models/model#color_format",children:"COLOR_FORMAT"}),"): The color format to be used."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);