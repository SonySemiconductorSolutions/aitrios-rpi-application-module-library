[project]
name = "modlib"
version = "1.1.0"
description = ""
authors = [{name="Sony Semiconductor Solutions Corp"}]
readme = "README.md"
requires-python = "==3.11.*"

dependencies = [
    "lapx~=0.5.11.post1",
    "libarchive-c~=5.1",
    "numpy>=1.26.0,<=2.2.0",
    "opencv-python~=4.10.0.84",
    "requests~=2.32.3",
    "tqdm~=4.67.1",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.4",
    "meson-python~=0.18.0",
    # "numpy>=2.0.0rc1,<=2.2.0",
    "meson~=1.8.0",
    "ninja",
]

[build-system]
requires = [
    "meson-python~=0.18.0",
    
    # numpy requirement for wheel builds for distribution on PyPI - building
    # against 2.x yields wheels that are also compatible with numpy 1.x at runtime.
    # Note that building against numpy 1.x works fine too - users and
    # redistributors can do this by installing the numpy version they like and
    # disabling build isolation.
    # "numpy>=2.0.0rc1,<=2.2.0",
]
build-backend = 'mesonpy'

[tool.meson-python.args]
setup = [
  '--default-library=static',
  '-Doptimization=3',
]

[tool.ruff]
line-length = 121

[tool.ruff.lint]
ignore = ["E722"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--cov='modlib' --cov-report=term-missing:skip-covered -s"
pythonpath = [ "." ]
python_files = ["tests/*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "aicam: marks tests as aicam (deselect with '-m \"not aicam\"')",
]

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "quay.io/pypa/manylinux_2_34"
manylinux-aarch64-image = "quay.io/pypa/manylinux_2_34"
before-build = "bash {project}/.github/workflows/cibw_before_build_linux.sh"
repair-wheel-command = "auditwheel repair -w {dest_dir} --plat manylinux_2_35_$(uname -m) {wheel}"

[tool.cibuildwheel.windows]
before-build = "bash {project}/.github/workflows/cibw_before_build_win.sh"
repair-wheel-command = "bash .github/workflows/repair_wheel_win.sh \"{wheel}\" \"{dest_dir}\""
